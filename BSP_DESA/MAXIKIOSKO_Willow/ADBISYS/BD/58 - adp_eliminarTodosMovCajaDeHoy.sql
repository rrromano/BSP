Use WIADBISYS
Go 
If Exists ( Select 1 From SysObjects Where Name = 'adp_eliminarTodosMovCajaDeHoy')
  Drop Procedure adp_eliminarTodosMovCajaDeHoy
Go 

-- SP QUE ELIMINA TODOS LOS MOVIMIENTOS DE LA CAJA PARA LA FECHA QUE SE RECIBE COMO PARÁMETRO, JUNTOS CON LAS COMPRAS Y LAS VENTAS.

Create procedure dbo.adp_eliminarTodosMovCajaDeHoy (@FECHA_MOV AS DATETIME,
																										@Login		 VARCHAR(255) = NULL)
as

BEGIN TRY
  SET NOCOUNT ON
  PRINT 'INICIO ACTUALIZACIÓN'

-- "Elimino" los movimientos de la caja.
	DELETE A
		FROM MOVIMIENTOS_CAJA A
	WHERE 1 = 1
		AND A.FECHA = @FECHA_MOV
-- "Elimino" las compras.
	UPDATE A
		SET A.ESTADO = 2,
				A.FECHA_MODIF = GETDATE(),
				A.LOGIN_MODIF = @LOGIN,
				A.TERM_MODIF = HOST_NAME()
	FROM COMPRAS A WHERE FECHA_COMPRA = @FECHA_MOV
-- "Elimino" las ventas.
UPDATE A
		SET A.ESTADO = 2,
				A.FECHA_MODIF = GETDATE(),
				A.LOGIN_MODIF = @LOGIN,
				A.TERM_MODIF = HOST_NAME()
	FROM VENTAS A WHERE Fecha_Venta = @FECHA_MOV
	
  PRINT 'FIN ACTUALIZACIÓN OK'
  SET NOCOUNT OFF
END TRY

BEGIN CATCH
  SET NOCOUNT OFF
  PRINT 'ACTUALIZACION CANCELADA POR ERROR'
  SELECT ERROR_NUMBER()     'ERROR_NUMBER' , 
         ERROR_MESSAGE()    'ERROR_MESSAGE', 
         ERROR_LINE()       'ERROR_LINE', 
         ERROR_PROCEDURE()  'ERROR_PROCEDURE', 
         ERROR_SEVERITY ()  'ERROR_SEVERITY',   
         ERROR_STATE()      'ERROR_STATE'
END CATCH
go
